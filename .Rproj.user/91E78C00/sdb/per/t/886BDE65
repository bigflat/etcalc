{
    "collab_server" : "",
    "contents" : "\nrm(list=ls(all=TRUE))\n\nlibrary(ggplot2)\n\n# V2 looks at specific days of shrub cutting\n# subset rainy season monthsmonths\n# rainmns = c(\"May\",\"June\",\"July\",\"August\",\"September\", \"October\")\n\n\n#read file\n# all_data = read.csv('KeurMatar_compiled_soil.csv',skip = 0, sep=',', head=T)\ndat_hr = read.csv('2015KVWST2_1hr.csv',skip = 0, sep=',', head=T)\n\n# date creation shortcut function\nf.tfun = function(x){ #function to calculate posixct time for GMT (Senegal)\n  as.POSIXct(x,origin = '1970-01-01 00:00:00', tz=\"GMT\")\n}\n\ndat_hr$logger_time_formatted    = as.POSIXct(dat_hr$logger_time_formatted,origin = 1970-01-01, tz=\"GMT\")\n\n\nlogger_time_formatted = dat_hr$logger_time_formatted\n\n# stop('here')\n# d.start = f.tfun('2013-07-01 00:00:00')\n# d.end   = f.tfun('2013-08-01 00:00:00')\n# \n# dat_hr = dat_hr[dat_hr$logger_time_formatted > d.start & dat_hr$logger_time_formatted < d.end,]\n# stop('here')\n# Aggregate T and precip data by day\ndaily_time_series  = cut(dat_hr$logger_time_formatted, breaks=\"day\")\n# dat_hr  \t= dat_hr[,2:ncol(dat_hr)]\ndat_hr.int    = dat_hr[,3:ncol(dat_hr)]\n soil_daily =  aggregate(dat_hr.int[1:ncol(dat_hr.int)], list(daily_time_series), mean, na.rm=T)\n \n soil_daily.max =  aggregate(dat_hr.int[1:ncol(dat_hr.int)], list(daily_time_series), max, na.rm=T)\n \nsoil_daily$logger_time_formatted = f.tfun(soil_daily$Group.1)\nsoil_daily.max$logger_time_formatted = f.tfun(soil_daily.max$Group.1)\n# plot(dat_hr$logger_time_formatted, dat_hr$CS_010_0_sTM, type = 'l')\n\n\ndat.daily = soil_daily\ndat.daily = dat.daily[c(\"logger_time_formatted\", \"BS_010_0_sTM\", \"BS_020_0_sTM\", \n             \"CO_010_0_sTM\", \"CO_020_0_sTM\", \"CO_020_1_sTM\", \"CS_010_0_sTM\", \n             \"CS_020_0_sTM\", \"CS_020_1_sTM\", \"CS_020_2_sTM\", \"BS_010_0_sWC\", \n             \"BS_020_0_sWC\", \"CO_010_0_sWC\", \"CO_020_0_sWC\", \"CO_020_1_sWC\",\n             \"CS_010_0_sWC\", \"CS_020_0_sWC\", \"CS_020_1_sWC\", \"CS_020_2_sWC\")]\n\ndat.daily.max = soil_daily.max\ndat.daily.max = dat.daily.max[c(\"logger_time_formatted\", \"BS_010_0_sTM\", \"BS_020_0_sTM\", \n                        \"CO_010_0_sTM\", \"CO_020_0_sTM\", \"CO_020_1_sTM\", \"CS_010_0_sTM\", \n                        \"CS_020_0_sTM\", \"CS_020_1_sTM\", \"CS_020_2_sTM\", \"BS_010_0_sWC\", \n                        \"BS_020_0_sWC\", \"CO_010_0_sWC\", \"CO_020_0_sWC\", \"CO_020_1_sWC\",\n                        \"CS_010_0_sWC\", \"CS_020_0_sWC\", \"CS_020_1_sWC\", \"CS_020_2_sWC\")]\n\nxlim.2012 = c(f.tfun('2012-07-01 00:00:00'), f.tfun('2012-08-15 00:00:00'))\nxlim.2012_harv =  c(f.tfun('2012-10-01 00:00:00'), f.tfun('2012-10-25 00:00:00'))\n     harv.2012 = f.tfun('2012-10-16 00:00:00')\nxlim.2013 = c(f.tfun('2013-07-01 00:00:00'), f.tfun('2013-08-15 00:00:00'))\n     cut1.2013 = f.tfun('2013-06-04 00:00:00')\n     cut2.2013 = f.tfun('2013-07-15 00:00:00')\n\nxlim.2013_harv = c(f.tfun('2013-10-15 00:00:00'), f.tfun('2013-11-05 00:00:00'))\n     harv.2013 = f.tfun('2013-10-28 00:00:00')\n\nxlim.2014 = c(f.tfun('2014-07-15 00:00:00'), f.tfun('2014-09-01 00:00:00'))\n     irrig.cut1.2014 = f.tfun('2014-02-26 00:00:00')\n     irrig.1.2014  = f.tfun('2014-03-05 00:00:00')\nxlim.2015 = c(f.tfun('2015-07-01 00:00:00'), f.tfun('2015-08-15 00:00:00'))\n\nallx.lims = list(xlim.2013, xlim.2014, xlim.2015)\n#Temperature difference in daily maximums\n\n\ndat.daily.max$tmtwndif1 = dat.daily.max$CO_020_0_sTM-dat.daily.max$CS_020_0_sTM\ndat.daily.max$tmtwndif2 = dat.daily.max$CO_020_0_sTM-dat.daily.max$CS_020_1_sTM\ndat.daily.max$tmtwndif3 = dat.daily.max$CO_020_0_sTM-dat.daily.max$CS_020_2_sTM\n\ndat.daily.max$tmtwndif21 = dat.daily.max$CO_020_1_sTM-dat.daily.max$CS_020_0_sTM\ndat.daily.max$tmtwndif22 = dat.daily.max$CO_020_1_sTM-dat.daily.max$CS_020_1_sTM\ndat.daily.max$tmtwndif23 = dat.daily.max$CO_020_1_sTM-dat.daily.max$CS_020_2_sTM\n\ndat.daily.max.tmdif = dat.daily.max[grep('tm', ignore.case=F,names(dat.daily.max))]\ntmdiffs.only = dat.daily.max.tmdif\nis.na(tmdiffs.only) <- sapply(tmdiffs.only, is.infinite)\ndaily.maxtm.dif.mean = rowMeans(tmdiffs.only, na.rm = T)\ndat.daily.max.tmdif$logger_time_formatted = dat.daily.max$logger_time_formatted\ndat.daily.max.tmdif$twn_mean = daily.maxtm.dif.mean\nmdat.daily.max.tmdif = melt(dat.daily.max.tmdif, id.vars = 'logger_time_formatted')\n\n# VWC difference in daily means\n\ndat.daily$wctwndif1 = dat.daily$CO_020_0_sWC-dat.daily$CS_020_0_sWC\ndat.daily$wctwndif2 = dat.daily$CO_020_0_sWC-dat.daily$CS_020_1_sWC\ndat.daily$wctwndif3 = dat.daily$CO_020_0_sWC-dat.daily$CS_020_2_sWC\n\ndat.daily$wctwndif21 = dat.daily$CO_020_1_sWC-dat.daily$CS_020_0_sWC\ndat.daily$wctwndif22 = dat.daily$CO_020_1_sWC-dat.daily$CS_020_1_sWC\ndat.daily$wctwndif23 = dat.daily$CO_020_1_sWC-dat.daily$CS_020_2_sWC\n\ndat.daily.wcdif = dat.daily[grep('wc', ignore.case=F,names(dat.daily))]\nwcdiffs.only = dat.daily.wcdif\nis.na(wcdiffs.only) <- sapply(wcdiffs.only, is.infinite)\ndaily.wcdif.mean = rowMeans(wcdiffs.only, na.rm = T)\nhi = apply(wcdiffs.only,1, sd, na.rm = TRUE)\ndat.daily.wcdif$logger_time_formatted = dat.daily$logger_time_formatted\ndat.daily.wcdif$twn_mean = daily.wcdif.mean\nmdat.daily.wcdif = melt(dat.daily.wcdif, id.vars = c('logger_time_formatted'))\n\nplot(dat.daily.wcdif$logger_time_formatted, dat.daily.wcdif$wctendif,type = 'l', xlim = xlim.2013)\n     abline(h = 0, col = 'red')\npar(mfrow = c(2,1))\nplot(dat.daily.max$logger_time_formatted, dat.daily.max$tmtendif, xlim = xlim.2014, pch = 16)\n     lines(dat.daily.max$logger_time_formatted, dat.daily.max$tmtendif)\n     abline(h = 0, col = 'red')\n\n     \n\nwcdiffplots = list()\nfor(i in 1: length(allx.lims)){\n    \n     wcdiffplots[[i]] = ggplot(mdat.daily.wcdif, aes(x  = logger_time_formatted, y = value))+\n          geom_line()+\n          facet_grid(variable~.)+\n          geom_hline(yintercept = 0, col = 'red')+\n          xlim(allx.lims[[i]])+\n          theme_bw()\n}\n\n\n# pdf('@hi.pdf')\n# print(wcdiffplots)\n# dev.off()\n\ntmdiffplots = list()\nfor(i in 1: length(allx.lims)){\n     \n     tmdiffplots[[i]] = ggplot(mdat.daily.max.tmdif , aes(x  = logger_time_formatted, y = value))+\n          geom_line()+\n          facet_grid(variable~.)+\n          geom_hline(yintercept = 0, col = 'red')+\n          xlim(allx.lims[[i]])+\n          theme_bw()\n}\n\n# pdf('@hiho.pdf')\n# print(tmdiffplots)\n# dev.off()\n\n\n# stop('halt!')\n# stop('IT HERE!')\n\n     \npar(mfrow = c(3,1))\nplot(dat.daily.max$logger_time_formatted, dat.daily.max$tendif, xlim = xlim.2013, pch = 16)\n     lines(dat.daily.max$logger_time_formatted, dat.daily.max$tendif)\nplot(dat.daily.max$logger_time_formatted, dat.daily.max$tendif, xlim = xlim.2014, pch = 16)\n     lines(dat.daily.max$logger_time_formatted, dat.daily.max$tendif)\nplot(dat.daily.max$logger_time_formatted, dat.daily.max$tendif, xlim = xlim.2015, pch = 16)\n     lines(dat.daily.max$logger_time_formatted, dat.daily.max$tendif)\n     \npar(mfrow = c(3,1))\nplot(dat.daily.max$logger_time_formatted, dat.daily.max$twndif1, xlim = xlim.2013,pch = 16)\n     lines(dat.daily.max$logger_time_formatted, dat.daily.max$twndif1)\n     abline(h = 0, col = 'red')\nplot(dat.daily.max$logger_time_formatted, dat.daily.max$twndif1, xlim = xlim.2014, pch = 16)\n     lines(dat.daily.max$logger_time_formatted, dat.daily.max$twndif1)\n     abline(h = 0, col = 'red')\nplot(dat.daily.max$logger_time_formatted, dat.daily.max$twndif1, xlim = xlim.2015, pch = 16)\n     lines(dat.daily.max$logger_time_formatted, dat.daily.max$twndif1)\n     abline(h = 0, col = 'red')\n\n     \ndat_hr$X = NULL\ntoMatch = c('010', '020')\ndat_hr_shal = dat_hr[grep(paste(toMatch,collapse=\"|\"), names(dat_hr))]\ndat_hr_shal$logger_time_formatted = logger_time_formatted\n\n\ndat.raw = melt(dat_hr_shal, id.vars = c(\"logger_time_formatted\"))\ndat.raw$meastype = substr(dat.raw$variable, 10,13)\ndat.raw$depth    = substr(dat.raw$variable, 4,6)\ndat.raw$tx       = substr(dat.raw$variable, 1,2)\ndat.raw$rad      = substr(dat.raw$variable,8,8)\n\ndat.raw_tm = dat.raw[dat.raw$meastype == 'sTM',]\ndat.raw_wc = dat.raw[dat.raw$meastype == 'sWC',]\n\n\n# plodding (plotting)\n\nggplot(dat.raw_tm, aes(x = logger_time_formatted, y = value))+\n     geom_line(aes(col= tx, linetype = rad))+\n     xlim(xlim.2013)+\n     ylim(27,37)+\n     facet_grid(depth~.)+\n     theme_bw()\n\nggplot(dat.raw_wc, aes(x = logger_time_formatted, y = value))+\n     geom_line(aes(col= tx, linetype = rad))+\n     xlim(xlim.2013)+\n     # ylim(27,37)+\n     facet_grid(depth~.)+\n     theme_bw()\n\nx13num = as.numeric(xlim.2013) \nx14num = as.numeric(xlim.2014) \nx15num = as.numeric(xlim.2015) \n\nx13seq = seq(x13num[1], x13num[2], by = 60*60*24*5)\nx14seq = seq(x14num[1], x14num[2], by = 60*60*24*5)\nx15seq = seq(x15num[1], x15num[2], by = 60*60*24*5)\n\nx13datseq = f.tfun(x13seq)\nx14datseq = f.tfun(x14seq)\nx15datseq = f.tfun(x15seq)\n\n\n\nmylim = c(0.01, 0.16)\ndflim = c(-2,7)\ntylim = c(28,45)\n\nmyticks  = c(0.05,0.1,0.15)\ndfticks = c(0,2,4,6)\ntyticks = c(30,35,40,45,50)\n\nmtcx = 0.75\n\nx = 0.01\n  # stop('nomax')\n  pdf('@whatevs.pdf', width = 7, height = 4)\n\n# multiplots different heights\n  s1 = seq(1,3,1) #set seqence for first three plots\n  s2 = seq(7,9,1)\nmy.mat = matrix(c(s1,s1,s1,4,5,6,s2,s2,s2), nrow = 7, ncol = 3, byrow = TRUE)\n# layout.show(layout(my.mat)) #test the layout\npar(\n      oma = c(5,7,0,0) + 0.1,\n      mar = c(0,0,1,1) + 0.1 ,lwd = 2)\nlayout(my.mat)\n\n\n",
    "created" : 1484335187931.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3558437893",
    "id" : "886BDE65",
    "lastKnownWriteTime" : 1484325282,
    "last_content_update" : 1484325282,
    "path" : "~/Dropbox/@PIRE/Matt Bright/Matt_manuscript/Matt_moisture/supp_Moisture_plots_dailyV01.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}